[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Ubuntu Java 11.0.26)
[debug] Load.defaultLoad until apply took 67.166156ms
[debug]           Load.loadUnit: plugins took 94.351033ms
[debug]           Load.loadUnit: defsScala took 0.320183ms
[debug] [Loading] Scanning directory /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project
[debug]             Load.loadUnit: mkEval took 6.482955ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.322534 ms
[info] loading settings for project scala-service-build from plugins.sbt ...
[debug]               Load.resolveProject(scala-service-build) took 32.603493ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-service-build, base: /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project, plugins: List(<none>))) took 62.016056ms
[debug] [Loading] Done in /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project, returning: (scala-service-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 585.783443ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.369824ms
[debug]         Load.loadUnit(file:/home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project/, ...) took 689.277508ms
[debug]       Load.apply: load took 795.915ms
[debug]       Load.apply: resolveProjects took 5.754716ms
[debug]       Load.apply: finalTransforms took 47.94278ms
[debug]       Load.apply: config.delegates took 4.766944ms
[debug]       Load.apply: Def.make(settings)... took 332.802056ms
[debug]       Load.apply: structureIndex took 76.982826ms
[debug]       Load.apply: mkStreams took 1.126357ms
[info] loading project definition from /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2047.670335ms
[debug]     Load.loadUnit: defsScala took 0.005027ms
[debug] [Loading] Scanning directory /home/R1Ga71/Documents/Github_projects/enterprise-data-platform/scala-service
[debug]       Load.loadUnit: mkEval took 0.230734ms
